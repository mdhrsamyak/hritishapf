import React, { useEffect, useRef, useState } from "react";
import {
  motion,
  AnimatePresence,
  useAnimation,
  animate,
  delay,
} from "framer-motion";

function ToolsBrands() {
  const [show, setShow] = useState(null);

  const handleShow = (display) => {
    if (show === display) {
      setShow(null);
      return;
    }
    setShow(display);
  };

  // marketing div slides from top
  const marketingVariant = {
    hidden: { y: -150, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.6 } },
  };

  // editing div slides from bottom
  const editingVariant = {
    hidden: { y: 150, opacity: 0 },
    visible: { y: 0, opacity: 1, transition: { duration: 0.6, delay: 0.2 } },
  };

  const toolsRef = useRef(null);
  const brandsRef = useRef(null);

  const toolsControls = useAnimation();
  const brandsControls = useAnimation();

  const toolsAnimation = {
    initial: {
      opacity: 0,
      x: -200,
    },
    animate: {
      opacity: 1,
      x: 0,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 20,
      },
    },
  };

  const ImageAnimation = {
    initial: {
      opacity: 0,
      x: 200,
    },
    animate: {
      opacity: 1,
      x: 0,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 20,
        delay: 0.3,
      },
    },
  };

  const brandsAnimation = {
    initial: {
      opacity: 0,
      x: 200,
    },
    animate: {
      opacity: 1,
      x: 0,
      transition: {
        type: "spring",
        stiffness: 300,
        damping: 20,
      },
    },
  };

  // TOOLS I WORK WITH animation (from left)
  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          toolsControls.start({
            x: 0,
            opacity: 1,
            transition: {
              type: "spring",
              stiffness: 300,
              damping: 20,
            },
          });
        } else {
          toolsControls.start({
            x: -200,
            opacity: 0,
            transition: { duration: 0.5, ease: "easeInOut" },
          });
        }
      },
      { threshold: 0.4 }
    );

    if (toolsRef.current) observer.observe(toolsRef.current);
    return () => observer.disconnect();
  }, [toolsControls]);

  return (
    <div className="flex flex-col bg-[#F8F8F8] px-5 py-20">
      <motion.div
        variants={toolsAnimation}
        initial={"initial"}
        whileInView={"animate"}
        className="flex items-center text-[22px] gap-2.5  lg:text-[50px] xl:text-[70px] font-bold cursor-pointer"
        onClick={() => handleShow("tools")}
      >
        <span className="text-[#777676]">TOOLS I</span>
        <span> WORK WITH</span>
        <svg
          width="50"
          height="50"
          viewBox="0 0 50 50"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M39.5834 43.7504L39.5834 6.25043C39.5822 5.87076 39.4775 5.49861 39.2806 5.17402C39.0836 4.84944 38.8018 4.58472 38.4656 4.40836C38.1294 4.232 37.7514 4.15067 37.3724 4.17313C36.9934 4.1956 36.6277 4.321 36.3147 4.53585L9.23135 23.2858C8.10843 24.0629 8.10843 25.9338 9.23135 26.7129L36.3147 45.4629C36.6271 45.68 36.993 45.8072 37.3726 45.8309C37.7522 45.8546 38.1311 45.7738 38.468 45.5973C38.805 45.4208 39.0871 45.1553 39.2837 44.8297C39.4804 44.5041 39.584 44.1308 39.5834 43.7504Z"
            fill="black"
          />
        </svg>
      </motion.div>
      {!show && (
        <motion.div
          variants={ImageAnimation}
          initial={"initial"}
          whileInView={"animate"}
          className="flex w-full justify-end items-center overflow-hidden"
        >
          <img
            src="/tb.jpg"
            alt="just an image"
            className="h-[557px] w-[1049px] object-contain mr-[80px]"
          />
        </motion.div>
      )}
      <AnimatePresence mode="wait">
        {show === "tools" && (
          <div className="flex justify-end flex-wrap w-full gap-[50px] my-[40px] lg:pr-[150px]">
            <motion.div
              variants={editingVariant}
              initial="hidden"
              animate="visible"
              exit="hidden"
              className="flex flex-col overflow-hidden gap-[10px] w-[500px] px-10 py-20 rounded-[20px] bg-[#1E1E1E] lg:mt-[200px] lg:min-h-[628px]"
            >
              <div className="text-white text-[24px] md:text-[28px] lg:text-[32px] font-bold w-full text-right">
                EDITING
              </div>
              <div className="flex flex-col gap-2 text-[16px] lg:text-[20px] font-extralight text-white">
                <span>• CANVA</span>
                <span>• IMOVIE</span>
                <span>• CAPCUT</span>
                <span>• ADOBE FRESCO</span>
                <span>• SNAPSEED</span>
                <span>• LIGHTROOM</span>
                <span>• VSCO</span>
                <span>• FIGMA</span>
              </div>
            </motion.div>
            <motion.div
              variants={marketingVariant}
              initial="hidden"
              animate="visible"
              exit="hidden"
              className="flex flex-col gap-[10px] w-[500px] px-10 py-20 rounded-[20px] bg-[#1E1E1E] lg:max-h-[628px]"
            >
              <div className="text-white text-[24px] md:text-[28px] lg:text-[32px] font-bold w-full text-right">
                MARKETING
              </div>
              <div className="flex flex-col gap-2 text-[16px] lg:text-[20px] font-extralight text-white">
                <span>• META BUSINESS SUITE</span>
                <span>• ADS MANAGER</span>
                <span>• FLODESK</span>
                <span>• SLACK</span>
                <span>• METRICOOL</span>
                <span>• LATER</span>
                <span>• LOOMLY</span>
                <span>• MONDAY</span>
                <span>• SCALE WITH SPARK</span>
                <span>• NOTION</span>
                <span>• FIGMA</span>
              </div>
            </motion.div>
          </div>
        )}

        <motion.div
          variants={brandsAnimation}
          initial={"initial"}
          whileInView={"animate"}
          className="flex justify-end gap-2.5 items-center text-[22px]  lg:text-[50px] xl:text-[70px] font-bold w-full my-[40px] cursor-pointer"
          onClick={() => handleShow("brands")}
        >
          <svg
            width="50"
            height="50"
            viewBox="0 0 50 50"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10.4166 6.24957L10.4166 43.7496C10.4178 44.1292 10.5225 44.5014 10.7194 44.826C10.9164 45.1506 11.1982 45.4153 11.5344 45.5916C11.8706 45.768 12.2486 45.8493 12.6276 45.8269C13.0066 45.8044 13.3723 45.679 13.6853 45.4641L40.7687 26.7142C41.8916 25.9371 41.8916 24.0662 40.7687 23.2871L13.6853 4.53707C13.3729 4.32003 13.007 4.19276 12.6274 4.16908C12.2478 4.14539 11.8689 4.2262 11.532 4.40272C11.195 4.57924 10.9129 4.84472 10.7163 5.17032C10.5196 5.49593 10.416 5.86919 10.4166 6.24957Z"
              fill="#777676"
            />
          </svg>
          <span className="text-[#777676]">BRANDS I'VE </span>
          <span> WORKED WITH</span>
        </motion.div>
        {show === "brands" && (
          <main className="flex-1  text-black py-20 relative bg-gray-300 rounded-[20px]">
            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-9 gap-5 ">
              {logo.map((brand, i) => (
                <div key={i} className=" flex items-center justify-center">
                  <div className="bg-gray-300 rounded-2xl transition-transform duration-300 ease-in-out hover:scale-105 ">
                    <img
                      src={brand.img}
                      alt={`brand-${i}`}
                      className={`w-30 h-30  object-contain transition-transform duration-300 ease-in-out hover:scale-120 ${brand.style}`}
                    />
                  </div>
                </div>
              ))}
            </div>
          </main>
        )}
      </AnimatePresence>
    </div>
  );
}

const apps = [
  {
    name: "Canva",
    icon: <img src="/canva.png" alt="canva" height={150} width={150} />,
  },
  {
    name: "iMovie",
    icon: <img src="/imovie.png" alt="imovie" height={150} width={150} />,
  },
  {
    name: "CapCut",
    icon: (
      <svg
        width="150"
        height="150"
        viewBox="0 0 150 150"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M62.4875 75L12.5 100C12.5 111.788 12.5 114.55 16.1625 118.212C19.825 121.875 25.7125 121.875 37.5 121.875H87.5C99.2875 121.875 105.175 121.875 108.837 118.212C112.5 114.55 112.5 111.788 112.5 100M62.4875 75L137.475 37.5M62.4875 75L12.5 50C12.5 41.3375 12.5 35.45 16.1625 31.7875C19.825 28.125 25.7125 28.125 37.5 28.125H87.5C99.2875 28.125 105.175 28.125 108.837 31.7875C112.5 35.45 112.5 41.3375 112.5 50M62.4875 75L137.475 112.5"
          stroke="black"
          stroke-width="9.375"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
    ),
  },
  {
    name: "Snapseed",
    icon: <img src="/snapseed.png" alt="snapseed" height={150} width={150} />,
  },
  {
    name: "VSCO",
    icon: (
      <svg
        width="150"
        height="150"
        viewBox="0 0 150 150"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_350_524)">
          <path
            d="M75 0C33.6 0 0 33.6 0 75C0 116.4 33.6 150 75 150C116.4 150 150 116.4 150 75C150 33.6 116.4 0 75 0ZM147 75C147 77.55 146.856 79.95 146.55 82.35L133.8 80.85C133.95 78.9 134.113 76.95 134.113 75C134.113 73.2 133.956 71.25 133.8 69.45L146.55 67.95C147 70.35 147 72.6 147 75ZM2.99375 75C2.99375 72.6 3.14375 70.1937 3.3 67.8L16.05 69.3C15.9 71.25 15.7562 73.05 15.7562 75C15.7562 76.95 15.9 78.75 16.05 80.7L3.3 82.2C2.99375 79.8063 2.99375 77.4 2.99375 75ZM130.944 55.65L142.95 51.15C144.559 55.6743 145.715 60.3472 146.4 65.1L133.65 66.6C133.044 62.85 132.15 59.1 130.944 55.65ZM131.25 75C131.25 78.75 130.8 82.35 130.206 85.95L117.6 83.1062C118.044 80.55 118.344 77.85 118.344 75C118.344 72.15 118.044 69.3 117.6 66.6L130.206 63.7438C130.944 67.35 131.25 71.1 131.25 75ZM75 115.35C64.3005 115.343 54.0412 111.09 46.4756 103.524C38.9099 95.9588 34.6566 85.6995 34.65 75C34.6566 64.3005 38.9099 54.0412 46.4756 46.4756C54.0412 38.9099 64.3005 34.6566 75 34.65C85.6995 34.6566 95.9588 38.9099 103.524 46.4756C111.09 54.0412 115.343 64.3005 115.35 75C115.363 80.2883 114.334 85.5274 112.321 90.4178C110.309 95.3083 107.352 99.7541 103.621 103.501C99.8892 107.249 95.4557 110.224 90.5738 112.257C85.6918 114.29 80.4571 115.341 75.1688 115.35H75ZM76.35 131.25V118.35C81.8791 118.178 87.3253 116.958 92.4 114.756L97.95 126.456C91.1384 129.468 83.7964 131.098 76.35 131.25ZM51.75 126.306L57.45 114.6C62.4933 116.917 67.9522 118.192 73.5 118.35V131.25C65.9884 131.105 58.5862 129.422 51.75 126.306ZM18.75 75C18.75 71.1 19.2 67.35 19.95 63.6L32.55 66.45C31.9375 69.2667 31.6375 72.1167 31.65 75C31.65 77.7 31.95 80.4 32.4 82.95L19.8 85.7938C19.0597 82.2445 18.7076 78.6253 18.75 75ZM73.5 18.75V31.65C68.0193 31.8282 62.6229 33.05 57.6 35.25L52.05 23.5563C58.8194 20.5745 66.1055 18.942 73.5 18.75ZM98.0937 23.7L92.4 35.4C87.3459 33.1347 81.8874 31.9103 76.35 31.8V18.9C84.15 18.9 91.5 20.7 98.0937 23.7ZM129.894 52.8C128.452 49.2979 126.695 45.934 124.644 42.75L135.15 35.55C137.731 39.5919 139.94 43.8594 141.75 48.3L129.894 52.8ZM129.456 60.9L116.844 63.75C115.406 58.4357 112.964 53.4459 109.65 49.05L119.85 40.9562C124.35 46.95 127.65 53.55 129.456 60.9ZM107.85 46.8C104.278 42.6278 99.953 39.1654 95.1 36.5938L100.8 24.9C107.397 28.3284 113.257 33.0168 118.05 38.7L107.85 46.8ZM104.1 23.4L110.1 12C114.287 14.3929 118.253 17.1538 121.95 20.25L113.406 30C110.531 27.4969 107.413 25.286 104.1 23.4ZM101.55 22.05C98.1789 20.387 94.6647 19.0315 91.05 18L94.2 5.55C98.8567 6.86072 103.376 8.61891 107.694 10.8L101.55 22.05ZM88.05 17.25C84.3 16.35 80.55 15.9 76.65 15.7562V2.99375C81.6062 3.14375 86.55 3.74375 91.2 4.8L88.05 17.25ZM73.8 15.7562C70.0192 15.8959 66.2565 16.3475 62.55 17.1062L59.55 4.65C64.05 3.6 68.8437 2.99375 73.8 2.99375V15.7562ZM59.55 17.8438C55.8833 18.8896 52.3333 20.2417 48.9 21.9L42.9 10.5C47.2208 8.35903 51.7429 6.65072 56.4 5.4L59.55 17.8438ZM46.35 23.25C43.041 25.0819 39.9253 27.2428 37.05 29.7L28.5 20.1C32.25 16.95 36.15 14.25 40.35 11.8562L46.35 23.25ZM49.35 24.9L54.9 36.5938C50.0602 39.119 45.7358 42.5276 42.15 46.6437L32.1 38.55C36.9393 32.9545 42.7919 28.3233 49.35 24.9ZM30.3 40.95L40.35 49.0438C37.0459 53.449 34.6031 58.4385 33.15 63.75L20.55 60.9C22.5 53.4 25.8 46.65 30.3 40.95ZM20.25 52.5L8.25 48C10.0438 43.5 12.3 39.15 15 35.25L25.5 42.6C23.3705 45.6843 21.6085 49.0068 20.25 52.5ZM19.2 55.3437C18 58.95 16.95 62.5437 16.5 66.4437L3.75 64.9562C4.5 60.15 5.55 55.35 7.20625 50.85L19.2 55.3437ZM16.35 83.55C16.95 87.3 17.8438 91.05 19.05 94.65L7.05 99.15C5.35578 94.5979 4.19797 89.8639 3.6 85.0438L16.35 83.55ZM20.25 97.35C21.7438 100.95 23.55 104.25 25.5 107.394L15 114.6C12.2848 110.666 10.0205 106.44 8.25 102L20.25 97.35ZM20.4 88.65L33.0063 85.8C34.3968 91.151 36.7891 96.1899 40.0562 100.65L30 108.75C25.4775 102.766 22.212 95.9287 20.4 88.65ZM41.85 102.9C45.442 107.15 49.8225 110.665 54.75 113.25L49.05 124.95C42.4039 121.467 36.4952 116.73 31.65 111L41.85 102.9ZM46.35 126.744L40.35 138.15C36.135 135.799 32.1654 133.033 28.5 129.894L37.05 120.3C39.9 122.844 42.9 124.95 46.35 126.744ZM48.9 128.1C52.2 129.75 55.8 131.1 59.5563 132.144L56.4062 144.594C51.74 143.374 47.2151 141.667 42.9062 139.5L48.9 128.1ZM62.4 132.9C66 133.65 69.75 134.102 73.65 134.256V147C68.8114 146.838 63.9936 146.287 59.2438 145.35L62.4 132.9ZM76.65 134.25C80.4337 134.117 84.1993 133.664 87.9062 132.894L90.9 145.344C86.2187 146.394 81.4437 146.994 76.65 147.137V134.25ZM90.7562 132.15C94.4156 131.116 97.9772 129.763 101.4 128.106L107.4 139.506C103.1 141.694 98.575 143.4 93.9062 144.6L90.7562 132.15ZM103.794 126.744C107.102 124.914 110.218 122.755 113.094 120.3L121.65 129.894C117.982 133.03 114.013 135.796 109.8 138.15L103.794 126.744ZM100.8 125.1L95.25 113.406C100.177 110.821 104.558 107.306 108.15 103.056L118.187 111.156C113.313 116.849 107.416 121.579 100.8 125.1ZM119.994 108.9L109.95 100.8C113.272 96.3731 115.67 91.3229 117 85.95L129.606 88.8C127.671 96.0363 124.412 102.851 119.994 108.9ZM129.75 97.5L141.75 102.006C139.955 106.481 137.695 110.754 135.006 114.756L124.494 107.4C126.594 104.297 128.356 100.978 129.75 97.5ZM130.8 94.6563C132 91.2 132.9 87.4562 133.506 83.7062L146.25 85.2C145.562 89.9562 144.413 94.625 142.806 99.15L130.8 94.6563ZM133.65 33.15L123.144 40.35C120.898 37.2833 118.4 34.4333 115.65 31.8L124.2 22.2C127.627 25.6012 130.787 29.2621 133.65 33.15ZM26.25 22.05L34.8 31.65C31.95 34.2 29.55 37.05 27.3 40.2L16.8 32.85C19.4968 28.8774 22.6705 25.2503 26.25 22.05ZM16.65 117.15L27.15 109.95C29.4 112.95 31.9563 115.806 34.65 118.506L26.1 128.1C22.6727 124.699 19.5133 121.038 16.65 117.15ZM123.9 127.956L115.35 118.35C118.05 115.806 120.606 112.956 122.844 109.95L133.356 117.3C130.479 121.087 127.318 124.649 123.9 127.956Z"
            fill="black"
          />
        </g>
        <defs>
          <clipPath id="clip0_350_524">
            <rect width="150" height="150" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Lightroom",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="154"
        height="150"
        viewBox="0 0 154 150"
        fill="none"
      >
        <g clip-path="url(#clip0_350_564)">
          <path
            d="M128.434 0H25.5664C11.4465 0 0 11.4167 0 25.5V124.26C0 138.343 11.4465 149.76 25.5664 149.76H128.434C142.554 149.76 154 138.343 154 124.26V25.5C154 11.4167 142.554 0 128.434 0Z"
            fill="#001E36"
          />
          <path
            d="M80.8756 105.845H40.172C39.4827 105.845 39.1384 105.467 39.1392 104.711V39.282C39.1211 39.156 39.1326 39.0276 39.1729 38.9069C39.2132 38.7861 39.2812 38.6764 39.3714 38.5864C39.4615 38.4964 39.5715 38.4286 39.6925 38.3883C39.8135 38.3481 39.9423 38.3364 40.0686 38.3544H52.6725C52.7708 38.3406 52.8709 38.3497 52.965 38.3811C53.059 38.4125 53.1445 38.4653 53.2146 38.5353C53.2848 38.6053 53.3376 38.6906 53.369 38.7845C53.4004 38.8784 53.4095 38.9782 53.3956 39.0762V92.8632H83.0448C83.6644 92.8632 83.9056 93.1722 83.7685 93.7902L81.9084 104.918C81.9041 105.07 81.8645 105.219 81.7928 105.353C81.7211 105.487 81.6192 105.603 81.4952 105.691C81.3036 105.79 81.0914 105.843 80.8756 105.846M91.1021 54.6348H102.363C102.991 54.6408 103.539 55.0608 103.705 55.6656C103.951 56.1169 104.126 56.6035 104.223 57.108C104.366 57.7716 104.469 58.4414 104.532 59.1174C104.6 59.8386 104.635 60.6114 104.635 61.4358C106.566 59.1928 108.895 57.324 111.505 55.923C114.437 54.3418 117.729 53.5431 121.062 53.6046C121.188 53.5866 121.317 53.5983 121.438 53.6385C121.559 53.6788 121.669 53.7466 121.759 53.8366C121.849 53.9266 121.917 54.0363 121.957 54.1571C121.998 54.2778 122.009 54.4062 121.991 54.5322V67.0002C121.991 67.4814 121.647 67.7218 120.958 67.7214C116.797 67.4645 112.634 68.2065 108.819 69.885C107.523 70.4449 106.348 71.2497 105.359 72.255V104.919C105.359 105.537 105.083 105.846 104.532 105.846H92.0315C91.8912 105.866 91.7481 105.853 91.6136 105.809C91.4791 105.764 91.3569 105.689 91.2567 105.589C91.1565 105.489 91.0809 105.367 91.0362 105.233C90.9914 105.098 90.9785 104.956 90.9987 104.816V69.3696C90.9987 68.5068 90.993 67.6154 90.9818 66.6954L90.9608 65.295C90.9567 65.0578 90.9521 64.819 90.9469 64.5786C90.9206 63.3257 90.8849 62.0731 90.8398 60.8208L90.7917 59.5812C90.746 58.1656 90.6082 56.7544 90.379 55.3566C90.3548 55.2632 90.3538 55.1653 90.3762 55.0714C90.3985 54.9776 90.4435 54.8906 90.5073 54.818C90.571 54.7454 90.6516 54.6895 90.7419 54.6551C90.8323 54.6206 90.9297 54.6087 91.0257 54.6204L91.1021 54.6348Z"
            fill="#31A8FF"
          />
        </g>
        <defs>
          <clipPath id="clip0_350_564">
            <rect width="154" height="150" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Figma",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="150"
        height="150"
        viewBox="0 0 150 150"
        fill="none"
      >
        <g clip-path="url(#clip0_350_526)">
          <path
            d="M53.3203 151.172C67.2656 151.172 78.5156 139.922 78.5156 125.977V100.781H53.3203C39.375 100.781 28.125 112.031 28.125 125.977C28.125 139.922 39.375 151.172 53.3203 151.172Z"
            fill="#0ACF83"
          />
          <path
            d="M28.125 75.5859C28.125 61.6406 39.375 50.3906 53.3203 50.3906H78.5156V100.781H53.3203C39.375 100.781 28.125 89.5312 28.125 75.5859Z"
            fill="#A259FF"
          />
          <path
            d="M28.125 25.1953C28.125 11.25 39.375 0 53.3203 0H78.5156V50.3906H53.3203C39.375 50.3906 28.125 39.1406 28.125 25.1953Z"
            fill="#F24E1E"
          />
          <path
            d="M78.5156 0H103.711C117.656 0 128.906 11.25 128.906 25.1953C128.906 39.1406 117.656 50.3906 103.711 50.3906H78.5156V0Z"
            fill="#FF7262"
          />
          <path
            d="M128.906 75.5859C128.906 89.5312 117.656 100.781 103.711 100.781C89.7656 100.781 78.5156 89.5312 78.5156 75.5859C78.5156 61.6406 89.7656 50.3906 103.711 50.3906C117.656 50.3906 128.906 61.6406 128.906 75.5859Z"
            fill="#1ABCFE"
          />
        </g>
        <defs>
          <clipPath id="clip0_350_526">
            <rect width="150" height="150" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
];

const apps2 = [
  {
    name: "Meta",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="150"
        height="100"
        viewBox="0 0 150 100"
        fill="none"
      >
        <g clip-path="url(#clip0_350_532)">
          <path
            d="M16.2031 65.5766C16.2031 71.293 17.4605 75.6819 19.1034 78.3368C21.2578 81.8146 24.4704 83.2877 27.7462 83.2877C31.9712 83.2877 35.8365 82.2409 43.2847 71.9591C49.2522 63.7181 56.2838 52.1497 61.0145 44.8977L69.0268 32.6111C74.5925 24.0784 81.034 14.593 88.4206 8.16316C94.4491 2.9152 100.954 0 107.5 0C118.49 0 128.959 6.35673 136.971 18.2789C145.74 31.3357 149.996 47.7819 149.996 64.7538C149.996 74.8433 148.004 82.2567 144.613 88.114C141.338 93.7784 134.953 99.4374 124.213 99.4374V83.2877C133.409 83.2877 135.704 74.8538 135.704 65.2018C135.704 51.4474 132.491 36.1825 125.413 25.276C120.389 17.5392 113.88 12.8123 106.718 12.8123C98.9724 12.8123 92.7388 18.6427 85.7336 29.0403C82.0095 34.5637 78.1859 41.2953 73.8935 48.8906L69.1675 57.2468C59.6739 74.0468 57.2693 77.8731 52.5228 84.1883C44.2028 95.2468 37.0992 99.4374 27.7462 99.4374C16.6519 99.4374 9.63557 94.6421 5.29101 87.4164C1.74388 81.5281 0.00195312 73.8023 0.00195312 64.9988L16.2031 65.5766Z"
            fill="#0081FB"
          />
          <path
            d="M12.7773 19.4187C20.2056 7.99181 30.9243 0 43.2186 0C50.3392 0 57.417 2.10351 64.8084 8.1269C72.8928 14.7123 81.5099 25.5567 92.2602 43.4298L96.1156 49.8433C105.42 65.3164 110.715 73.276 113.813 77.0304C117.799 81.8509 120.589 83.2877 124.214 83.2877C133.41 83.2877 135.705 74.8538 135.705 65.2018L149.997 64.7538C149.997 74.8433 148.005 82.2567 144.615 88.114C141.339 93.7784 134.954 99.4374 124.214 99.4374C117.538 99.4374 111.623 97.9901 105.082 91.831C100.053 87.1041 94.175 78.7064 89.6523 71.1573L76.1997 48.7292C69.4506 37.4737 63.2586 29.0819 59.6757 25.2807C55.8216 21.1942 50.8659 16.2585 42.9584 16.2585C36.5585 16.2585 31.1229 20.7415 26.5745 27.5977L12.7773 19.4187Z"
            fill="url(#paint0_linear_350_532)"
          />
          <path
            d="M42.9566 16.2585C36.5566 16.2585 31.1211 20.7415 26.5726 27.5977C20.1416 37.2866 16.2031 51.7175 16.2031 65.5766C16.2031 71.293 17.4605 75.6819 19.1034 78.3368L5.29101 87.4164C1.74388 81.5281 0.00195312 73.8023 0.00195312 64.9988C0.00195312 48.9895 4.40452 32.3041 12.7761 19.4187C20.2043 7.99181 30.923 0 43.2173 0L42.9566 16.2585Z"
            fill="url(#paint1_linear_350_532)"
          />
        </g>
        <defs>
          <linearGradient
            id="paint0_linear_350_532"
            x1="1917.12"
            y1="5561.93"
            x2="12232.6"
            y2="6083.93"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#0064E1" />
            <stop offset="0.4" stop-color="#0064E1" />
            <stop offset="0.83" stop-color="#0073EE" />
            <stop offset="1" stop-color="#0082FB" />
          </linearGradient>
          <linearGradient
            id="paint1_linear_350_532"
            x1="2347.24"
            y1="7236.5"
            x2="2347.24"
            y2="3436.08"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#0082FB" />
            <stop offset="1" stop-color="#0064E0" />
          </linearGradient>
          <clipPath id="clip0_350_532">
            <rect width="150" height="100" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Slack",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="150"
        height="150"
        viewBox="0 0 150 150"
        fill="none"
      >
        <g clip-path="url(#clip0_350_536)">
          <path
            d="M31.9395 94.5927C31.9395 103.183 24.934 110.199 16.343 110.199C7.75195 110.199 0.738281 103.183 0.738281 94.5927C0.738281 86.0028 7.7543 78.9868 16.3441 78.9868H31.9406L31.9395 94.5927ZM39.8016 94.5927C39.8016 86.0028 46.8176 78.9868 55.4074 78.9868C63.9973 78.9868 71.0133 86.0017 71.0133 94.5927V133.657C71.0133 142.247 63.9984 149.263 55.4074 149.263C46.8176 149.263 39.8016 142.247 39.8016 133.657V94.5927Z"
            fill="#DE1C59"
          />
          <path
            d="M55.4074 31.9395C46.8176 31.9395 39.8016 24.934 39.8016 16.343C39.8016 7.75195 46.8176 0.738281 55.4074 0.738281C63.9973 0.738281 71.0133 7.7543 71.0133 16.3441V31.9406L55.4074 31.9395ZM55.4074 39.8016C63.9973 39.8016 71.0133 46.8176 71.0133 55.4074C71.0133 63.9973 63.9984 71.0133 55.4074 71.0133H16.343C7.75313 71.0133 0.738281 63.9984 0.738281 55.4074C0.738281 46.8176 7.7543 39.8016 16.3441 39.8016H55.4074Z"
            fill="#35C5F0"
          />
          <path
            d="M118.06 55.4074C118.06 46.8176 125.066 39.8016 133.657 39.8016C142.248 39.8016 149.263 46.8176 149.263 55.4074C149.263 63.9973 142.246 71.0133 133.657 71.0133H118.06V55.4074ZM110.198 55.4074C110.198 63.9973 103.182 71.0133 94.5922 71.0133C86.0023 71.0133 78.9863 63.9984 78.9863 55.4074V16.343C78.9863 7.75313 86.0012 0.738281 94.5922 0.738281C103.182 0.738281 110.198 7.7543 110.198 16.3441V55.4074Z"
            fill="#2EB57D"
          />
          <path
            d="M94.5922 118.061C103.182 118.061 110.198 125.066 110.198 133.657C110.198 142.248 103.182 149.263 94.5922 149.263C86.0023 149.263 78.9863 142.247 78.9863 133.657V118.061H94.5922ZM94.5922 110.199C86.0023 110.199 78.9863 103.183 78.9863 94.5927C78.9863 86.0028 86.0012 78.9868 94.5922 78.9868H133.657C142.246 78.9868 149.263 86.0017 149.263 94.5927C149.263 103.183 142.246 110.199 133.657 110.199H94.5922Z"
            fill="#EBB02E"
          />
        </g>
        <defs>
          <clipPath id="clip0_350_536">
            <rect width="150" height="150" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Flodesk",
    icon: <img src="/flodesk.png" alt="flodesk" height={150} width={150} />,
  },
  {
    name: "Metricool",
    icon: <img src="/metricool.png" alt="metricool" height={150} width={150} />,
  },
  {
    name: "Monday",
    icon: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="195"
        height="119"
        viewBox="0 0 195 119"
        fill="none"
      >
        <g clip-path="url(#clip0_350_544)">
          <path
            d="M24.2591 117.085C19.9485 117.094 15.7127 115.957 11.9844 113.791C8.25611 111.624 5.16889 108.505 3.03815 104.752C0.939912 101.026 -0.106556 96.7984 0.0108502 92.5221C0.128257 88.2459 1.40511 84.0821 3.70464 80.477L47.4056 11.75C49.6422 8.05623 52.8178 5.02329 56.608 2.96098C60.3981 0.898666 64.667 -0.119093 68.9785 0.011674C73.2867 0.114949 77.4901 1.36276 81.1586 3.6274C84.8271 5.89204 87.8289 9.09218 89.8567 12.9003C93.931 20.6147 93.4214 29.8959 88.5427 37.1381L44.8692 105.864C42.6546 109.321 39.6045 112.161 36.0016 114.123C32.3988 116.084 28.3598 117.103 24.2591 117.085Z"
            fill="#F62B54"
          />
          <path
            d="M99.2175 117.084C90.4031 117.084 82.2926 112.364 78.0331 104.779C75.9395 101.064 74.8954 96.847 75.0128 92.582C75.1302 88.317 76.4047 84.1645 78.6996 80.5698L122.318 11.9998C124.521 8.25419 127.686 5.16728 131.482 3.05937C135.279 0.951461 139.57 -0.100677 143.909 0.0121085C152.798 0.206628 160.853 5.18556 164.926 12.9747C166.915 16.7888 167.819 21.0763 167.542 25.3699C167.264 29.6635 165.815 33.7984 163.353 37.3239L119.744 105.893C117.536 109.335 114.498 112.164 110.911 114.12C107.324 116.076 103.302 117.095 99.2175 117.084Z"
            fill="#FFCC00"
          />
          <path
            d="M172.501 117.659C184.927 117.659 195 107.783 195 95.5998C195 83.4168 184.927 73.5405 172.501 73.5405C160.075 73.5405 150.002 83.4168 150.002 95.5998C150.002 107.783 160.075 117.659 172.501 117.659Z"
            fill="#00CA72"
          />
        </g>
        <defs>
          <clipPath id="clip0_350_544">
            <rect width="195" height="119" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  {
    name: "Later",
    icon: <img src="/later.png" alt="later" height={150} width={150} />,
  },
  {
    name: "Loonly",
    icon: <img src="/loomly.png" alt="loomly" height={150} width={150} />,
  },
];

const logo = [
  { name: "1ClubNepal", img: "/Clients/1cn.png" },
  { name: "Benny", img: "/Clients/bennys.png" },
  {
    name: "Asian Geographical",
    img: "/Clients/asian-geo.png",
  },
  {
    name: "Everest Mortgages & Wealth Management",
    img: "/Clients/everest-mort.jpg",
    style: "h-30 w-30 rounded-2xl",
  },
  { name: "Invade Marketing", img: "/Clients/invade.png" },
  { name: "KTM-Zone", img: "/Clients/ktm-zone.png" },
  { name: "Drop of Everest", img: "/Clients/DROP OF EVEREST.png" },
  { name: "ET Recruitment", img: "/Clients/ET Rec Logo.png" },
  { name: "Gurkha", img: "/Clients/gs.png" },
  { name: "Hamro Mortgages", img: "/Clients/hamro.png" },
  { name: "Gurkha", img: "/Clients/hari buda magar.png" },
  { name: "Gurkha", img: "/Clients/harley.png" },
  { name: "Gurkha", img: "/Clients/simba.png", style: "h-30 w-30 rounded-2xl" },
  { name: "Gurkha", img: "/Clients/nbd.png" },
  { name: "Gurkha", img: "/Clients/NEPAL FOOD.png" },
  { name: "Gurkha", img: "/Clients/okksk.jpg", style: "h-30 w-30 rounded-2xl" },
  { name: "Gurkha", img: "/Clients/Nepali-Beer-Logo.png" },
  { name: "Gurkha", img: "/Clients/spark.png" },
  { name: "Gurkha", img: "/Clients/sushiisii.png" },
];

export default ToolsBrands;
